FROM rvernica/scidb:18.1


ARG ARROW_VER=0.8.0-2

## Install dependencies
RUN echo "deb https://packages.red-data-tools.org/ubuntu/ trusty universe" \
    >> /etc/apt/sources.list.d/red-data-tools.list                         \
    && apt-get update                                                      \
    && apt-get install                                                     \
         --assume-yes                                                      \
         --no-install-recommends                                           \
         --allow-unauthenticated                                           \
        red-data-tools-keyring                                             \
    && apt-get update                                                      \
    && apt-get install --assume-yes --no-install-recommends                \
        bc                                                                 \
        gcc                                                                \
        libarrow-dev=$ARROW_VER                                            \
        libarrow0=$ARROW_VER                                               \
        libpcre3-dev                                                       \
        libpqxx-dev                                                        \
    && rm -rf /var/lib/apt/lists/*                                         \
    && wget --no-verbose https://bootstrap.pypa.io/get-pip.py              \
    && python get-pip.py                                                   \
    && pip install scidb-strm


ARG SCIDB_DEV_TOOLS=ad1af92b3b252ab4a64663ec50f0f9b29bbf349d
ARG SCIDB_ACCELERATED_IO_TOOLS=9c25ddb00b5e21d8b02e2a4291f637c19a35d426
ARG SCIDB_EQUI_JOIN=244f569ccdbb81da7c23747bb46cc2751bc2734e
ARG SCIDB_GROUPED_AGGREGATE=7cc9a50891bbe0a10c9b4ede07e658346b3f62d3
ARG SCIDB_STREAM=912449c6bdf8de946281d46213403d7cc7515739
ARG SCIDB_SUPERFUNPACK=5379c98d732954fef3d6a200bd0f1b73ba1424a1


## Install dev_tools
RUN wget --no-verbose --output-document -                                      \
        https://github.com/Paradigm4/dev_tools/archive/$SCIDB_DEV_TOOLS.tar.gz \
    |  tar --extract --gzip --directory=/usr/local/src                         \
    && make --directory=/usr/local/src/dev_tools-$SCIDB_DEV_TOOLS              \
    && cp /usr/local/src/dev_tools-$SCIDB_DEV_TOOLS/*.so                       \
        $SCIDB_INSTALL_PATH/lib/scidb/plugins                                  \
    && rm -rf /usr/local/src/dev_tools-$SCIDB_DEV_TOOLS


## Install Paradigm4 plug-ins
## Re-create ".pgpass" file due to hard links created by Docker Hub
RUN cp /root/.pgpass /root/.pgpass.bk          \
    && mv /root/.pgpass.bk /root/.pgpass       \
    && service ssh start                       \
    && service postgresql start                \
    && scidb.py startall $SCIDB_NAME           \
    && iquery --afl --query                    \
        "load_library('dev_tools');            \
                                               \
         install_github(                       \
             'Paradigm4/accelerated_io_tools', \
             '$SCIDB_ACCELERATED_IO_TOOLS',    \
             'https_proxy=$https_proxy');      \
         load_library('accelerated_io_tools'); \
                                               \
         install_github(                       \
             'Paradigm4/equi_join',            \
             '$SCIDB_EQUI_JOIN',               \
             'https_proxy=$https_proxy');      \
         load_library('equi_join');            \
                                               \
         install_github(                       \
             'Paradigm4/grouped_aggregate',    \
             '$SCIDB_GROUPED_AGGREGATE',       \
             'https_proxy=$https_proxy');      \
         load_library('grouped_aggregate');    \
                                               \
         install_github(                       \
             'Paradigm4/stream',               \
             '$SCIDB_STREAM',                  \
             'https_proxy=$https_proxy');      \
         load_library('stream');               \
                                               \
         install_github(                       \
             'Paradigm4/superfunpack',         \
             '$SCIDB_SUPERFUNPACK',            \
             'https_proxy=$https_proxy');      \
         load_library('superfunpack')"         \
    && scidb.py stopall $SCIDB_NAME            \
    && service postgresql stop


## Update Shim conf to use aio
RUN echo aio=1            \
    >> /var/lib/shim/conf
